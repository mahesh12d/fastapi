/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated by scripts/generate-logos.js
 * Run 'npm run generate:logos' to regenerate
 */

import airbnbLogo from '@assets/logos/airbnb.svg';
import amazonLogo from '@assets/logos/amazon.svg';
import appleLogo from '@assets/logos/apple.svg';
import googleLogo from '@assets/logos/google.svg';
import mcdonaldLogo from '@assets/logos/mcdonald.svg';
import metaLogo from '@assets/logos/meta.svg';
import microsoftLogo from '@assets/logos/microsoft.svg';
import netflixLogo from '@assets/logos/netflix.svg';
import snapchatLogo from '@assets/logos/snapchat.svg';
import stripeLogo from '@assets/logos/stripe.svg';

export interface CompanyInfo {
  id: string;
  name: string;
  displayName: string;
  logoPath: string;
  primaryColor: string;
  secondaryColor?: string;
}

// Auto-generated logo registry
const LOGO_REGISTRY: Record<string, string> = {
  airbnb: airbnbLogo,
  amazon: amazonLogo,
  apple: appleLogo,
  google: googleLogo,
  mcdonald: mcdonaldLogo,
  meta: metaLogo,
  microsoft: microsoftLogo,
  netflix: netflixLogo,
  snapchat: snapchatLogo,
  stripe: stripeLogo,
};

// Default color configurations for known companies
const COMPANY_COLORS: Record<string, Pick<CompanyInfo, 'primaryColor' | 'secondaryColor'>> = {
  microsoft: {
    primaryColor: '#00BCF2',
    secondaryColor: '#0078D4',
  },
  google: {
    primaryColor: '#4285F4',
    secondaryColor: '#DB4437',
  },
  apple: {
    primaryColor: '#000000',
    secondaryColor: '#A8A8A8',
  },
  amazon: {
    primaryColor: '#FF9900',
    secondaryColor: '#232F3E',
  },
  meta: {
    primaryColor: '#1877F2',
    secondaryColor: '#42B883',
  },
  netflix: {
    primaryColor: '#E50914',
    secondaryColor: '#221F1F',
  },
  stripe: {
    primaryColor: '#635BFF',
    secondaryColor: '#0A2540',
  },
  airbnb: {
    primaryColor: '#FF5A5F',
    secondaryColor: '#FF385C',
  },
  tesla: {
    primaryColor: '#CC0000',
    secondaryColor: '#000000',
  },
  uber: {
    primaryColor: '#000000',
    secondaryColor: '#1FBAD6',
  },
  shopify: {
    primaryColor: '#7AB55C',
    secondaryColor: '#95BF47',
  },
  discord: {
    primaryColor: '#5865F2',
    secondaryColor: '#7289DA',
  },
  slack: {
    primaryColor: '#4A154B',
    secondaryColor: '#36C5F0',
  },
};

/**
 * Normalizes company name to match expected filename format
 */
function normalizeCompanyName(companyName: string): string {
  return companyName.toLowerCase()
    .trim()
    .replace(/\s+/g, '')
    .replace(/[^a-z0-9]/g, '');
}

/**
 * Gets company info by name using auto-generated logo registry
 */
export function getCompanyInfo(companyName: string): CompanyInfo | null {
  if (!companyName) return null;
  
  const normalizedName = normalizeCompanyName(companyName);
  const logoPath = LOGO_REGISTRY[normalizedName];
  
  // If no logo found, return null
  if (!logoPath) return null;
  
  // Get colors from config or use defaults
  const colors = COMPANY_COLORS[normalizedName] || {
    primaryColor: '#6366F1', // Default indigo
    secondaryColor: '#4F46E5',
  };
  
  // Create display name (capitalize first letter of each word)
  const displayName = companyName
    .toLowerCase()
    .split(/\s+/)
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
  
  return {
    id: normalizedName,
    name: displayName,
    displayName: displayName,
    logoPath: logoPath,
    primaryColor: colors.primaryColor,
    secondaryColor: colors.secondaryColor,
  };
}

/**
 * Gets company info by ID
 */
export function getCompanyById(id: string): CompanyInfo | null {
  return getCompanyInfo(id);
}

/**
 * Generates a company ID from a company name
 */
export function generateCompanyId(companyName: string): string {
  return normalizeCompanyName(companyName);
}

/**
 * Gets all available companies (those in the logo registry)
 */
export function getAllCompanies(): CompanyInfo[] {
  const companies: CompanyInfo[] = [];
  
  for (const [normalizedName, logoPath] of Object.entries(LOGO_REGISTRY)) {
    const colors = COMPANY_COLORS[normalizedName] || {
      primaryColor: '#6366F1',
      secondaryColor: '#4F46E5',
    };
    
    const displayName = normalizedName.charAt(0).toUpperCase() + normalizedName.slice(1);
    
    companies.push({
      id: normalizedName,
      name: displayName,
      displayName: displayName,
      logoPath: logoPath,
      primaryColor: colors.primaryColor,
      secondaryColor: colors.secondaryColor,
    });
  }
  
  return companies;
}

/**
 * Checks if a company logo exists
 */
export function hasCompanyLogo(companyName: string): boolean {
  const info = getCompanyInfo(companyName);
  return info !== null;
}
